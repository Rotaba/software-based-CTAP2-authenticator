import struct

from fido2 import cbor
from binascii import a2b_hex, b2a_hex

sent = b'a40158209fccfb359cfa52537286a32e1010cf6fe5e4081e844f283dbf586ddb1d35411902a26269646b6578616d706c652e636f6d646e616d656a4578616d706c6520525003a262696447757365725f6964646e616d6567412e20557365720481a263616c672664747970656a7075626c69632d6b6579'
sent2 =b'\xa4\x01X \xdej4N\x8dn\x08\x01\x84x\xd17\xcda\xe8\x03\xa6\xd7\xe513\xbb\x8f8\xc4\xa2\x89\xf6\x17\xb1\x942\x02\xa2bidkexample.comdna'
sent3 =b'a401582083e68437db4885168710cb8340352f0a948ede1349d3355bdec0405719ce725a02a26269646b6578616d706c652e636f6d646e61'
sent3 =b'a401582083e68437db4885168710cb8340352f0a948ede1349d3355bdec0405719ce725a02a26269646b6578616d706c652e636f6d646e616d656a4578616d706c6520525003a262696447757365725f6964646e616d6567412e20557365720481a263616c672664747970656a7075626c69632d6b6579'
sent5 =b'01a4015820338a6d50609be2446ef3b198cf99654a6f659dd66d3816f2c518b32e3a7556e602a26269646b6578616d706c652e636f6d646e616d656a4578616d706c6520525003a262696447757365725f6964646e616d6567412e20557365720481a263616c672664747970656a7075626c69632d6b6579'


def args(*args):
    """
    Constructs a dict from a list of arguments for sending a CBOR command.
    """
    if args:
        return dict((i, v) for i, v in enumerate(args, 1) if v is not None)
    return None

def _parse_cbor(data):
    resp, rest = cbor.loads(data)
    if rest:
        raise ValueError('Extraneous data')
    return resp

print(cbor.dumps(a2b_hex(sent)))

def dict_values(d, indent=0):
    for key, value in d.items():
        print((value), indent+1)

def cbor2hex(data):
    return b2a_hex(cbor.dumps(data)).decode()

def hex2cbor(data):
    return cbor.loads(a2b_hex(data))

cbor1 = {'3': 0,
    b'2': 0,
    1: 0
    }
print(cbor1.get(1))
val ='a30100413200613300'
print(cbor2hex(cbor1))
v1 = cbor.dumps(cbor1)
print(v1)
# print(v1.decode())

sent5 = hex2cbor(sent5[2:])
print(sent5)

ATT_OBJ = b'a301667061636b65640258c40021f5fc0b85cd22e60623bcd7d1ca48948909249b4776eb515154e57b66ae124100000003f8a011f38c0a4d15800617111f9edc7d004060a386206a3aacecbdbb22d601853d955fdc5d11adfbd1aa6a950d966b348c7663d40173714a9f987df6461beadfb9cd6419ffdfe4d4cf2eec1aa605a4f59bdaa50102032620012158200edb27580389494d74d2373b8f8c2e8b76fa135946d4f30d0e187e120b423349225820e03400d189e85a55de9ab0f538ed60736eb750f5f0306a80060fe1b13010560d03a363616c6726637369675847304502200d15daf337d727ab4719b4027114a2ac43cd565d394ced62c3d9d1d90825f0b3022100989615e7394c87f4ad91f8fdae86f7a3326df332b3633db088aac76bffb9a46b63783563815902bb308202b73082019fa00302010202041d31330d300d06092a864886f70d01010b0500302a3128302606035504030c1f59756269636f2050726576696577204649444f204174746573746174696f6e301e170d3138303332383036333932345a170d3139303332383036333932345a306e310b300906035504061302534531123010060355040a0c0959756269636f20414231223020060355040b0c1941757468656e74696361746f72204174746573746174696f6e3127302506035504030c1e59756269636f205532462045452053657269616c203438393736333539373059301306072a8648ce3d020106082a8648ce3d030107034200047d71e8367cafd0ea6cf0d61e4c6a416ba5bb6d8fad52db2389ad07969f0f463bfdddddc29d39d3199163ee49575a3336c04b3309d607f6160c81e023373e0197a36c306a302206092b0601040182c40a020415312e332e362e312e342e312e34313438322e312e323013060b2b0601040182e51c0201010404030204303021060b2b0601040182e51c01010404120410f8a011f38c0a4d15800617111f9edc7d300c0603551d130101ff04023000300d06092a864886f70d01010b050003820101009b904ceadbe1f1985486fead02baeaa77e5ab4e6e52b7e6a2666a4dc06e241578169193b63dadec5b2b78605a128b2e03f7fe2a98eaeb4219f52220995f400ce15d630cf0598ba662d7162459f1ad1fc623067376d4e4091be65ac1a33d8561b9996c0529ec1816d1710786384d5e8783aa1f7474cb99fe8f5a63a79ff454380361c299d67cb5cc7c79f0d8c09f8849b0500f6d625408c77cbbc26ddee11cb581beb7947137ad4f05aaf38bd98da10042ddcac277604a395a5b3eaa88a5c8bb27ab59c8127d59d6bbba5f11506bf7b75fda7561a0837c46f025fd54dcf1014fc8d17c859507ac57d4b1dea99485df0ba8f34d00103c3eef2ef3bbfec7a6613de'  # noqa
sent6 = hex2cbor(ATT_OBJ)
print(sent6[0].get(1))
print(sent6[0].get(2))
print(sent6[0].get(3))
print(cbor1.get(1))
print(v1)

statement = {
    'alg': -7,
    'sig': a2b_hex(
        b'304502200D15DAF337D727AB4719B4027114A2AC43CD565D394CED62C3D9D1D90825F0B3022100989615E7394C87F4AD91F8FDAE86F7A3326DF332B3633DB088AAC76BFFB9A46B'),
    # noqa
    'x5c': [a2b_hex(
        b
    # noqa
}
auth_data = a2b_hex(
    b'0021F5FC0B85CD22E60623BCD7D1CA48948909249B4776EB515154E57B66AE124100000003F8A011F38C0A4D15800617111F9EDC7D004060A386206A3AACECBDBB22D601853D955FDC5D11ADFBD1AA6A950D966B348C7663D40173714A9F987DF6461BEADFB9CD6419FFDFE4D4CF2EEC1AA605A4F59BDAA50102032620012158200EDB27580389494D74D2373B8F8C2E8B76FA135946D4F30D0E187E120B423349225820E03400D189E85A55DE9AB0F538ED60736EB750F5F0306A80060FE1B13010560D')  # noqa

attest_obj = {
    1: 'packed',
    2: auth_data,
    3: statement
}

sent7 = cbor2hex(attest_obj)
print(sent7)

_ATT_CRED_DATA = a2b_hex('f8a011f38c0a4d15800617111f9edc7d0040fe3aac036d14c1e1c65518b698dd1da8f596bc33e11072813466c6bf3845691509b80fb76d59309b8d39e0a93452688f6ca3a39a76f3fc52744fb73948b15783a5010203262001215820643566c206dd00227005fa5de69320616ca268043a38f08bde2e9dc45a5cafaf225820171353b2932434703726aae579fa6542432861fe591e481ea22d63997e1a5290')  # noqa
_CRED_ID = a2b_hex('fe3aac036d14c1e1c65518b698dd1da8f596bc33e11072813466c6bf3845691509b80fb76d59309b8d39e0a93452688f6ca3a39a76f3fc52744fb73948b15783')  # noqa
_PUB_KEY = {1: 2, 3: -7, -1: 1, -2: a2b_hex('643566c206dd00227005fa5de69320616ca268043a38f08bde2e9dc45a5cafaf'), -3: a2b_hex('171353b2932434703726aae579fa6542432861fe591e481ea22d63997e1a5290')}  # noqa

app_param = a2b_hex(b'f0e6a6a97042a4f1f1c87f5f7d44315b2d852c2df5c7991cc66241bf7072d1c4')

auth_data2 = b''.join([
    b'\x0021F5FC0B85CD22E60623BCD7D1CA48948909249B4776EB515154E57B66AE12' #param
    b'\x41', #FLAG
    b'\x0000001C', #counter
    b'f8a011f38c0a4d15800617111f9edc7d0040fe3aac036d14c1e1c65518b698dd1da8f596bc33e11072813466c6bf3845691509b80fb76d59309b8d39e0a93452688f6ca3a39a76f3fc52744fb73948b15783a5010203262001215820643566c206dd00227005fa5de69320616ca268043a38f08bde2e9dc45a5cafaf225820171353b2932434703726aae579fa6542432861fe591e481ea22d63997e1a5290'
])

attest_obj2 = {
    1: 'packed',
    2: auth_data,
    3: statement
}

sent7 = cbor2hex(auth_data2)
print(b2a_hex(auth_data2))
auth_data = b'\x0021F5FC0B85CD22E60623BCD7D1CA48948909249B4776EB515154E57B66AE12410000001CF8A011F38C0A4D15800617111F9EDC7D0040FE3AAC036D14C1E1C65518B698DD1DA8F596BC33E11072813466C6BF3845691509B80FB76D59309B8D39E0A93452688F6CA3A39A76F3FC52744FB73948B15783A5010203262001215820643566C206DD00227005FA5DE69320616CA268043A38F08BDE2E9DC45A5CAFAF225820171353B2932434703726AAE579FA6542432861FE591E481EA22D63997E1A5290'
print(b2a_hex(auth_data))

print (auth_data2[:32])
print (auth_data[:32])

print (auth_data2[32:32+5])
print (auth_data[32:32+5])

print (auth_data2[37:])
print (auth_data[37:])

print (auth_data2[62:])
print (auth_data[64:])

auth_data3 = a2b_hex(
    b'0021F5FC0B85CD22E60623BCD7D1CA48948909249B4776EB515154E57B66AE124100000003F8A011F38C0A4D15800617111F9EDC7D004060A386206A3AACECBDBB22D601853D955FDC5D11ADFBD1AA6A950D966B348C7663D40173714A9F987DF6461BEADFB9CD6419FFDFE4D4CF2EEC1AA605A4F59BDAA50102032620012158200EDB27580389494D74D2373B8F8C2E8B76FA135946D4F30D0E187E120B423349225820E03400D189E85A55DE9AB0F538ED60736EB750F5F0306A80060FE1B13010560D')  # noqa

auth_data4 = b''.join([
    b'0021F5FC0B85CD22E60623BCD7D1CA48948909249B4776EB515154E57B66AE12'  # param
    b'41',  # FLAG
    b'00000003',  # counter
    b'f8a011f38c0a4d15800617111f9edc7d0040fe3aac036d14c1e1c65518b698dd1da8f596bc33e11072813466c6bf3845691509b80fb76d59309b8d39e0a93452688f6ca3a39a76f3fc52744fb73948b15783a5010203262001215820643566c206dd00227005fa5de69320616ca268043a38f08bde2e9dc45a5cafaf225820171353b2932434703726aae579fa6542432861fe591e481ea22d63997e1a5290'
])
print()
print(b2a_hex(auth_data3))
print((auth_data4))
print()
_PUB_KEY = {1: 2, 3: -7, -1: 1, -2: a2b_hex('643566c206dd00227005fa5de69320616ca268043a38f08bde2e9dc45a5cafaf'),
                -3: a2b_hex('171353b2932434703726aae579fa6542432861fe591e481ea22d63997e1a5290')}
pub = 'a5010203262001215820643566c206dd00227005fa5de69320616ca268043a38f08bde2e9dc45a5cafaf225820171353b2932434703726aae579fa6542432861fe591e481ea22d63997e1a5290'
print(cbor2hex(_PUB_KEY))
print(a2b_hex(pub))


_AAGUID = b'f8a011f38c0a4d15800617111f9edc7d'
_CRED_ID = b'fe3aac036d14c1e1c65518b698dd1da8f596bc33e11072813466c6bf3845691509b80fb76d59309b8d39e0a93452688f6ca3a39a76f3fc52744fb73948b15783'  # noqa
_PUB_KEY = {1: 2, 3: -7, -1: 1, -2: a2b_hex('643566c206dd00227005fa5de69320616ca268043a38f08bde2e9dc45a5cafaf'),
            -3: a2b_hex('171353b2932434703726aae579fa6542432861fe591e481ea22d63997e1a5290')}  # noqa
pub = a2b_hex(cbor2hex(_PUB_KEY))

attest_data = b''.join([
    _AAGUID,
    #b'F8A011F38C0A4D15800617111F9EDC7D', #AAGUID
    b'0040',  # CRED_ID length
    _CRED_ID,
    pub,
    ])
print()
print(attest_data)
print(b'f8a011f38c0a4d15800617111f9edc7d0040fe3aac036d14c1e1c65518b698dd1da8f596bc33e11072813466c6bf3845691509b80fb76d59309b8d39e0a93452688f6ca3a39a76f3fc52744fb73948b15783a5010203262001215820643566c206dd00227005fa5de69320616ca268043a38f08bde2e9dc45a5cafaf225820171353b2932434703726aae579fa6542432861fe591e481ea22d63997e1a5290')
print()


# from cryptography.hazmat.backends import default_backend
# from cryptography.hazmat.primitives import hashes
# from cryptography.hazmat.primitives.asymmetric import ec, rsa, padding

from fido2 import cbor
from fido2.cose import CoseKey, ES256, RS256, UnsupportedKey
from binascii import a2b_hex


from fido2.cose import CoseKey, ES256, RS256, UnsupportedKey

_ES256_KEY = a2b_hex(
    b'A5010203262001215820A5FD5CE1B1C458C530A54FA61B31BF6B04BE8B97AFDE54DD8CBB69275A8A1BE1225820FA3A3231DD9DEED9D1897BE5A6228C59501E4BCD12975D3DFF730F01278EA61C')  # noqa
key2 = CoseKey.parse(cbor.loads(_ES256_KEY)[0])

_PUB_KEY = {1: 2,
            3: -7,
            -2: a2b_hex('643566c206dd00227005fa5de69320616ca268043a38f08bde2e9dc45a5cafaf'),
            -1: 1,
            -3: a2b_hex('171353b2932434703726aae579fa6542432861fe591e481ea22d63997e1a5290')
            }  # noqa
_X_KEY = {
            1: 2,
            3: -7,
            -2: a2b_hex(b'A5FD5CE1B1C458C530A54FA61B31BF6B04BE8B97AFDE54DD8CBB69275A8A1BE1'),  # noqa
            -1: 1,
            -3: a2b_hex(b'FA3A3231DD9DEED9D1897BE5A6228C59501E4BCD12975D3DFF730F01278EA61C')  # noqa
        }

print(key2)
print(_X_KEY)
# print(b'A5010203262001215820A5FD5CE1B1C458C530A54FA61B31BF6B04BE8B97AFDE54DD8CBB69275A8A1BE1225820FA3A3231DD9DEED9D1897BE5A6228C59501E4BCD12975D3DFF730F01278EA61C')
# pub_self = b'4D466B77457759484B6F5A497A6A3043415159494B6F5A497A6A30444151634451674145356F474C67546764325975766957567442634D53487878515430744752304C4741736A7A556E5A6757674E32536E6449545464316F362B4A4C4543574A6772396C62335845592F744473485651576F4C5632775444773D3D'
# print(pub_self)

#
# gen_cose = {
#             1: 2,
#             3: -7 ,
#             -2: publickey[1:33],
#             -1: 1,
#             -3: publickey[33:65]
#         }
# print(gen_cose)
#
# print(b2a_hex(u2fcrypto.x509encode_p256ecdsa_publickey(publickey)))
# print(a2b_hex(b
#
# EC_PRIV = 0x7452e599fee739d8a653f6a507343d12d382249108a651402520b72f24fe7684
# EC_PRIV2 = a2b_hex('7452e599fee739d8a653f6a507343d12d382249108a651402520b72f24fe7684')
# EC_PUB_X = a2b_hex(b'44D78D7989B97E62EA993496C9EF6E8FD58B8B00715F9A89153DDD9C4657E47F')  # noqa
# EC_PUB_Y = a2b_hex(b'EC802EE7D22BD4E100F12E48537EB4E7E96ED3A47A0A3BD5F5EEAB65001664F9')
#
# _EC_KEY = {
#             1: 2,
#             3: -7,
#             -2: EC_PUB_X,
#             -1: 1,
#             -3: EC_PUB_Y
#         }
# print(_EC_KEY)
# print(_PUB_KEY)
# _ES256_KEY = a2b_hex(b'A5010203262001215820A5FD5CE1B1C458C530A54FA61B31BF6B04BE8B97AFDE54DD8CBB69275A8A1BE1225820FA3A3231DD9DEED9D1897BE5A6228C59501E4BCD12975D3DFF730F01278EA61C')  # noqa
# key2 = CoseKey.parse(cbor.loads(_ES256_KEY)[0])
# key_EC = CoseKey.parse(_EC_KEY)
#
# print(key2)
# print(key_EC)

#
# EC_PRIV3 = ec.derive_private_key(
#             EC_PRIV,
#             ec.SECP256R1(),
#             default_backend()
#         )
# print(ec.generate_private_key(ec.SECP256R1(),
#             default_backend()))
# print(EC_PRIV3.public_key()._y)
# print()


# import u2fcrypto
from cryptography.hazmat.primitives.asymmetric import ec, rsa, padding
from cryptography.hazmat.backends import default_backend
static_seed = a2b_hex(b'14c3e265fb41299a46d9af9a156c347bbfe87e382705d38018490d431cefb12e1e6479a922250583844a5092ee5c3d5f50f57d427b448c88a8b56c781acbc365')

# privatekey, publickey = u2fcrypto.generate_p256ecdsa_keypair(static_seed)
# privatekey = a2b_hex(b'30e7f461242a687a99f62b252787b0c9c928dad93a5932499edfc785030b33c9')
# publickey = a2b_hex(b'523798b7221300600751f7e7d24ab5ca3746dc8b092219f8546924251c12b4d28e35356fbe42a7e1b607024f519c11a877e1ae4770777b487fdcb177b2d25105')


# print(b2a_hex(privatekey))
# print(b2a_hex(publickey))
# print(b2a_hex(publickey[0:32]))
# print(b2a_hex(publickey[32:64]))
#
# _NEW_KEY = {
#             1: 2,
#             3: -7,
#             -2: publickey[0:32],  # noqa
#             -1: 1,
#             -3: publickey[32:64]  # noqa
#         }
# key_EC = CoseKey.parse(_NEW_KEY)

# sig = u2fcrypto.generate_sha256_p256ecdsa_signature(privatekey, b'0021F5FC0B85CD22E60623BCD7D1CA48948909249B4776EB515154E57B66AE12010000002C' + b'7B89F12A9088B0F5EE0EF8F6718BCCC374249C31AEEBAEB79BD0450132CD536C')
# print(b2a_hex(sig))
# print(b'304402202B3933FE954A2D29DE691901EB732535393D4859AAA80D58B08741598109516D0220236FBE6B52326C0A6B1CFDC6BF0A35BDA92A6C2E41E40C3A1643428D820941E0')

sig = b'cdd2f09e91b09d7b325fb049f76400af1a2d920d9a77d0d15b485da7ded3e823802d648c9aac9a5e9a047fe7e7af978b17192dd1a3d8f9fccee063ba42ee814e'

# key2.verify(
#     a2b_hex(b'0021F5FC0B85CD22E60623BCD7D1CA48948909249B4776EB515154E57B66AE12010000002C' +  # noqa
#             b'7B89F12A9088B0F5EE0EF8F6718BCCC374249C31AEEBAEB79BD0450132CD536C'),  # noqa
#     a2b_hex(
#         b'304402202B3933FE954A2D29DE691901EB732535393D4859AAA80D58B08741598109516D0220236FBE6B52326C0A6B1CFDC6BF0A35BDA92A6C2E41E40C3A1643428D820941E0')
#     # noqa
# )
# key_EC.verify(
#     a2b_hex(b'0021F5FC0B85CD22E60623BCD7D1CA48948909249B4776EB515154E57B66AE12010000002C' + b'7B89F12A9088B0F5EE0EF8F6718BCCC374249C31AEEBAEB79BD0450132CD536C'), a2b_hex(sig))

_GA_RESP = b'a301a26269645840fe3aac036d14c1e1c65518b698dd1da8f596bc33e11072813466c6bf3845691509b80fb76d59309b8d39e0a93452688f6ca3a39a76f3fc52744fb73948b1578364747970656a7075626c69632d6b6579025900250021f5fc0b85cd22e60623bcd7d1ca48948909249b4776eb515154e57b66ae12010000001d035846304402206765cbf6e871d3af7f01ae96f06b13c90f26f54b905c5166a2c791274fc2397102200b143893586cc799fba4da83b119eaea1bd80ac3ce88fcedb3efbd596a1f4f63'
print(hex2cbor(_GA_RESP))
#GA_RESP_CBOR = {
#   1: {
#       'id': b'\xfe:\xac\x03m\x14\xc1\xe1\xc6U\x18\xb6\x98\xdd\x1d\xa8\xf5\x96\xbc3\xe1\x10r\x814f\xc6\xbf8Ei\x15\t\xb8\x0f\xb7mY0\x9b\x8d9\xe0\xa94Rh\x8fl\xa3\xa3\x9av\xf3\xfcRtO\xb79H\xb1W\x83',
#     'type': 'public-key'
#   },
#   2: b'\x00!\xf5\xfc\x0b\x85\xcd"\xe6\x06#\xbc\xd7\xd1\xcaH\x94\x89\t$\x9bGv\xebQQT\xe5{f\xae\x12\x01\x00\x00\x00\x1d',
#   3: b"0D\x02 ge\xcb\xf6\xe8q\xd3\xaf\x7f\x01\xae\x96\xf0k\x13\xc9\x0f&\xf5K\x90\\Qf\xa2\xc7\x91'O\xc29q\x02 \x0b\x148\x93Xl\xc7\x99\xfb\xa4\xda\x83\xb1\x19\xea\xea\x1b\xd8\n\xc3\xce\x88\xfc\xed\xb3\xef\xbdYj\x1fOc"
# }, b'')

auth_data = b'\x00!\xf5\xfc\x0b\x85\xcd"\xe6\x06#\xbc\xd7\xd1\xcaH\x94\x89\t$\x9bGv\xebQQT\xe5{f\xae\x12\x01\x00\x00\x00\x1d'
print(auth_data)

#WEBATUHNDEMOSITE_FORMAT
init =  b"\x03\x00\x00\x00@H\xfe\xc6\xe7\xea\x06\xf4zH}jw\xec\x834]a\xb4\x12\x06x\xca\xef\xafC\xc5\xb1\x82\xe3|\x1bS\x95i\x08\x8f\x1e\xce\xe3#)T\x03]\xbd\x10\xd7\xca\xe3\x910Z'Q\xb5Y\xbb\x8f\xd7\xcb\xb2)\xbd\xd4\x00\x00"
print(hex2cbor(b2a_hex(init)))
init2 = b'010300000040f817482c11593a0b285a195d51f0853eda6e0466a9b9efb6d34394daf56d85929569088f1ecee3232954035dbd10d7cae391305a2751b559bb8fd7cbb229bdd40000'
print(hex2cbor((init2)))

msg2 = b'01030000004046b0f187ae1d22e4554acbdc19c17d23feec2156ab2d8e1109ce36c15c44e67b9569088f1ecee3232954035dbd10d7cae391305a2751b559bb8fd7cbb229bdd40000'
#
# print(msg2.len())